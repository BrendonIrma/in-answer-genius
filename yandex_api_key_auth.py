#!/usr/bin/env python3

import requests
import json
import time

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
API_KEY_ID = "ajeh426q8gm5uqba08gu"  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä API –∫–ª—é—á–∞
FOLDER_ID = "b1g4854pso9q87p5lg8p"

def get_iam_token_from_api_key():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ IAM —Ç–æ–∫–µ–Ω–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API –∫–ª—é—á–∞"""
    
    print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ IAM —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ API –∫–ª—é—á...")
    print(f"üìù API Key ID: {API_KEY_ID}")
    print(f"üìÅ FOLDER_ID: {FOLDER_ID}")
    print("-" * 50)
    
    # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IAM —Ç–æ–∫–µ–Ω–∞
    url = "https://iam.api.cloud.yandex.net/iam/v1/tokens"
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    headers = {
        "Content-Type": "application/json"
    }
    
    # –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IAM —Ç–æ–∫–µ–Ω–∞
    payload = {
        "yandexPassportOauthToken": API_KEY_ID
    }
    
    try:
        response = requests.post(url, headers=headers, json=payload, timeout=30)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            iam_token = result.get("iamToken")
            expires_at = result.get("expiresAt")
            
            if iam_token:
                print("‚úÖ IAM —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"üîë –¢–æ–∫–µ–Ω: {iam_token[:10]}...{iam_token[-5:]}")
                print(f"‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: {expires_at}")
                return iam_token
            else:
                print("‚ùå IAM —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                print("üìù –û—Ç–≤–µ—Ç:", json.dumps(result, indent=2, ensure_ascii=False))
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {response.status_code}")
            try:
                error_data = response.json()
                print("üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", json.dumps(error_data, indent=2, ensure_ascii=False))
            except:
                print("üìù –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:", response.text)
            return None
            
    except requests.exceptions.Timeout:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
        return None
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None

def test_yandex_gpt_with_iam_token(iam_token):
    """–¢–µ—Å—Ç YandexGPT —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º IAM —Ç–æ–∫–µ–Ω–æ–º"""
    
    print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YandexGPT —Å IAM —Ç–æ–∫–µ–Ω–æ–º")
    print("-" * 50)
    
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    headers = {
        "Authorization": f"Bearer {iam_token}",
        "Content-Type": "application/json"
    }
    payload = {
        "modelUri": f"gpt://{FOLDER_ID}/yandexgpt-lite",
        "completionOptions": {
            "temperature": 0.3,
            "maxTokens": 500
        },
        "messages": [
            {"role": "user", "text": "–ß—Ç–æ —Ç–∞–∫–æ–µ InAnswer.pro?"}
        ]
    }
    
    try:
        response = requests.post(url, headers=headers, json=payload, timeout=30)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            answer = result["result"]["alternatives"][0]["message"]["text"]
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ! –û—Ç–≤–µ—Ç –æ—Ç –ò–ò:")
            print(f"ü§ñ {answer}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}:")
            try:
                error_data = response.json()
                print(json.dumps(error_data, indent=2, ensure_ascii=False))
            except:
                print(response.text)
                
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    # –ü–æ–ª—É—á–∞–µ–º IAM —Ç–æ–∫–µ–Ω
    iam_token = get_iam_token_from_api_key()
    
    if iam_token:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º YandexGPT —Å IAM —Ç–æ–∫–µ–Ω–æ–º
        test_yandex_gpt_with_iam_token(iam_token)
    else:
        print("\nüìù –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:")
        print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API Key ID")
        print("2. –ü–æ–ª—É—á–∏—Ç—å IAM —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–Ω—Å–æ–ª–∏")
        print("3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è API –∫–ª—é—á–∞")