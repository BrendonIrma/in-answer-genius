import dotenv from 'dotenv';
import axios from 'axios';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const API_KEY = process.env.YANDEX_API_KEY;
const FOLDER_ID = process.env.YANDEX_FOLDER_ID;
const BASE_URL = 'https://llm.api.cloud.yandex.net/foundationModels/v1/completion';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ YandexGPT API...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
console.log('üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
console.log(`YANDEX_API_KEY: ${API_KEY ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
console.log(`YANDEX_FOLDER_ID: ${FOLDER_ID ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n`);

if (!API_KEY || !FOLDER_ID) {
  console.log('‚ùå –û—à–∏–±–∫–∞: API –∫–ª—é—á –∏–ª–∏ FOLDER_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:');
  console.log('1. –ó–∞–π–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å Yandex Cloud: https://console.cloud.yandex.ru/');
  console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ IAM ‚Üí API –∫–ª—é—á–∏');
  console.log('3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π');
  console.log('4. –ù–∞–π–¥–∏—Ç–µ FOLDER_ID –≤ URL: console.cloud.yandex.ru/folders/{FOLDER_ID}');
  console.log('5. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞
if (!API_KEY.startsWith('AQVN')) {
  console.log('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "AQVN"');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç FOLDER_ID
if (!FOLDER_ID.match(/^[a-z0-9]{20}$/)) {
  console.log('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: FOLDER_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 20-—Å–∏–º–≤–æ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π');
}

console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å YandexGPT API...\n');

// –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
const testRequest = {
  modelUri: `gpt://${FOLDER_ID}/yandexgpt-lite`,
  completionOptions: {
    temperature: 0.3,
    maxTokens: 100
  },
  messages: [
    {
      role: 'user',
      text: '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ.'
    }
  ]
};

try {
  console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...');
  
  const response = await axios.post(BASE_URL, testRequest, {
    headers: {
      'Authorization': `Api-Key ${API_KEY}`,
      'Content-Type': 'application/json'
    },
    timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥
  });

  console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
  console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}`);
  console.log(`ü§ñ –û—Ç–≤–µ—Ç: ${response.data.result?.alternatives?.[0]?.message?.text || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞'}`);
  
  console.log('\nüéâ API –∫–ª—é—á–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  console.log('–¢–µ–ø–µ—Ä—å –≤–∞—à –±—ç–∫–µ–Ω–¥ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å YandexGPT –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–æ–≤.');

} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å YandexGPT API:');
  
  if (error.response) {
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${JSON.stringify(error.response.data, null, 2)}`);
    
    if (error.response.status === 401) {
      console.log('\nüîë –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á');
      console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å YANDEX_API_KEY –≤ —Ñ–∞–π–ª–µ .env');
    } else if (error.response.status === 403) {
      console.log('\nüö´ –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤');
      console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –µ—Å—Ç—å —Ä–æ–ª—å ai.languageModels.user');
    } else if (error.response.status === 404) {
      console.log('\nüìÅ –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ–≤–µ—Ä–Ω—ã–π FOLDER_ID');
      console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å YANDEX_FOLDER_ID –≤ —Ñ–∞–π–ª–µ .env');
    }
  } else if (error.code === 'ECONNABORTED') {
    console.log('‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (30 —Å–µ–∫—É–Ω–¥)');
    console.log('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
  } else {
    console.log(`üìù –û—à–∏–±–∫–∞: ${error.message}`);
  }
  
  console.log('\nüìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å:');
  console.log('- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è YandexGPT: https://yandex.cloud/ru/docs/foundation-models/');
  console.log('- –ö–æ–Ω—Å–æ–ª—å Yandex Cloud: https://console.cloud.yandex.ru/');
}