#!/usr/bin/env python3

import requests
import json
import time
from datetime import datetime

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
IAM_TOKEN = "t1.9euelZqZl8uJkJ2cnpuTlJmUx4-RkO3rnpWancaTnJqdzYmOisuKx5uRmYnl8_cTEUM5-e9WKhtv_t3z91M_QDn571YqG2_-zef1656Vms3OxpTKmZybzJuOmZ2TjI-M7_zF656Vms3OxpTKmZybzJuOmZ2TjI-M.bskZf50XAPR8ngIhlAiTejIAdEMEYWpS-Xkn5dziiInFHWVi8OHc6PHgSyhI9tMdKXpdh2ABSxpB0NVPFBGbCA"  # ‚Üê –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IAM —Ç–æ–∫–µ–Ω
FOLDER_ID = "b1g4854pso9q87p5lg8p"

def test_yandex_gpt_with_iam():
    """–¢–µ—Å—Ç YandexGPT —Å IAM —Ç–æ–∫–µ–Ω–æ–º"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YandexGPT —Å IAM —Ç–æ–∫–µ–Ω–æ–º")
    print(f"üìÅ FOLDER_ID: {FOLDER_ID}")
    print(f"üîë IAM_TOKEN: {IAM_TOKEN[:10]}...{IAM_TOKEN[-5:] if len(IAM_TOKEN) > 15 else IAM_TOKEN}")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now()}")
    print("-" * 50)
    
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    headers = {
        "Authorization": f"Bearer {IAM_TOKEN}",
        "Content-Type": "application/json"
    }
    payload = {
        "modelUri": f"gpt://{FOLDER_ID}/yandexgpt-lite",
        "completionOptions": {
            "temperature": 0.3,
            "maxTokens": 500
        },
        "messages": [
            {"role": "user", "text": "–ß—Ç–æ —Ç–∞–∫–æ–µ InAnswer.pro?"}
        ]
    }
    
    try:
        response = requests.post(url, headers=headers, json=payload, timeout=30)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            answer = result["result"]["alternatives"][0]["message"]["text"]
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ! –û—Ç–≤–µ—Ç –æ—Ç –ò–ò:")
            print(f"ü§ñ {answer}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}:")
            try:
                error_data = response.json()
                print(json.dumps(error_data, indent=2, ensure_ascii=False))
            except:
                print(response.text)
                
    except requests.exceptions.Timeout:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
    except requests.exceptions.ConnectionError:
        print("üåê –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def get_iam_token_from_console():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é IAM —Ç–æ–∫–µ–Ω–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏"""
    
    print("\n" + "="*60)
    print("üìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–û–õ–£–ß–ï–ù–ò–Æ IAM –¢–û–ö–ï–ù–ê")
    print("="*60)
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å Yandex Cloud")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'IAM' ‚Üí '–¢–æ–∫–µ–Ω—ã'")
    print("4. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω'")
    print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
    print("6. –ó–∞–º–µ–Ω–∏—Ç–µ '–≤–∞—à_iam_—Ç–æ–∫–µ–Ω' –≤ —ç—Ç–æ–º —Å–∫—Ä–∏–ø—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
    print("\nüîó –°—Å—ã–ª–∫–∞: https://console.cloud.yandex.ru/iam/tokens")
    print("="*60)

if __name__ == "__main__":
    if IAM_TOKEN == "–≤–∞—à_iam_—Ç–æ–∫–µ–Ω":
        print("‚ö†Ô∏è  IAM —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        get_iam_token_from_console()
    else:
        test_yandex_gpt_with_iam()